* 2.5-27: implement Algorithm R (buddy system reservation)
*
* Input: rI1=k
* Output: rI3=L
* Registers used:
* rI2=j, rI3=L, rI4=P, rI5=2^j, rA is temp
TAG	EQU	0:0
KVAL	EQU	1:1
TKVAL	EQU	0:1
LINKF	EQU	2:3
LINKB	EQU	4:5
RESERVE	STJ	9F
R1	ENT2	0,1		j <- k.
	ENT5	1		The next few lines sets rI5=2^k.
	ENTA	0,1
	JAZ	*+4
	INC5	0,5		rI5 <- 2*rI5.
	DECA	1
	JMP	*-3
1H	CMP2	AVAIL,2(KVAL)
	JG	OVERFLOW	j > m?
	LDA	AVAIL,2(LINKF)
	DECA	AVAIL,2
	JANZ	R2		AVAILF[J] != LOC(AVAIL[J])?
	INC2	1		j <- j+1.
	INC5	0,5		rI5 <- 2*rI5.
	JMP	1B
R2	LD3	AVAIL,2(LINKB)	L <- AVAILB[j].
	LD4	0,3(LINKB)	P <- LINKB(L).
	ST4	AVAIL,2(LINKB)	AVAILB[j] <- P.
	ENTA	AVAIL,2		LOC(AVAIL[j])
	STA	0,4(LINKF)	  -> LINKF(P).
	STZ	0,3(TAG)	TAG(L) <- 0.
R3	ENTA	0,2
	DECA	0,1
9H	JAZ	*		j = k?
R4	DEC2	1		j <- j-1.
	ENT4	0,3
	INC4	0,5		P <- L+2^j.
	ENNA	0,2
	STA	0,4(TKVAL)	TAG(P)<-1, KVAL(P)<-j.
	ENTA	AVAIL,2
	STA	0,4(LINKF)	LINKF(P) <- LOC(AVAIL[j]).
	STA	0,4(LINKB)	LINKB(P) <- LOC(AVAIL[j]).
	ST4	AVAIL,2(LINKF)	AVAILF[j] <- P.
	ST4	AVAIL,2(LINKB)	AVAILB[j] <- P.
	JMP	R3
	END	RESERVE